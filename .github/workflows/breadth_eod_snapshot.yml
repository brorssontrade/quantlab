name: breadth_eod_snapshot

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * 1-5"  # kör ofta men gate:ar till 17:30–18:00 SE-tid

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Stockholm
      PYTHONPATH: ${{ github.workspace }}/src
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install deps + package (editable)
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install -e .

      - name: Gate to 17:30–18:00 Stockholm time (weekdays)
        id: gate
        shell: bash
        run: |
          now=$(TZ=Europe/Stockholm date +%H%M)
          dow=$(TZ=Europe/Stockholm date +%u)
          open=false
          if [ "$dow" -le 5 ] && [ "$now" -ge 1730 ] && [ "$now" -le 1800 ]; then
            open=true
          fi
          echo "open=$open" >> $GITHUB_OUTPUT

      - name: Compute OUT_PREFIX
        if: steps.gate.outputs.open == 'true'
        shell: bash
        run: |
          if [[ -n "${{ secrets.S3_PREFIX }}" ]]; then
            OUT_PREFIX="${{ secrets.S3_PREFIX }}"
          elif [[ -n "${{ vars.S3_PREFIX }}" ]]; then
            OUT_PREFIX="${{ vars.S3_PREFIX }}"
          else
            OUT_PREFIX="storage"
          fi
          echo "OUT_PREFIX=${OUT_PREFIX}" >> $GITHUB_ENV

      - name: Build breadth (EOD 1d)
        if: steps.gate.outputs.open == 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          python -m quantkit.snapshots.breadth_snapshot \
            --interval 1d \
            --out-agg "${OUT_PREFIX}/snapshots/breadth/latest.parquet" \
            --out-sym "${OUT_PREFIX}/snapshots/breadth/symbols/latest.parquet"

      - name: Skipped (not EOD window)
        if: steps.gate.outputs.open != 'true'
        run: echo "Outside EOD window; skipping."
